apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.frontend.appName }}-configmap
  labels:
    app.kubernetes.io/instance: {{ .Values.frontend.appName }}
data:
  "index.html": |-
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Service Routing Test</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                height: 100vh;
                background-color: #f0f0f0;
            }
    
            h1 {
                color: #333;
            }
    
            .button-container {
                display: flex;
                gap: 10px;
                margin-top: 20px;
            }
    
            button {
                padding: 10px 20px;
                border: none;
                border-radius: 5px;
                background-color: #007BFF;
                color: white;
                cursor: pointer;
                transition: background-color 0.3s;
            }
    
            button:hover {
                background-color: #0056b3;
            }
    
            .result-container {
                margin-top: 20px;
                padding: 10px;
                border: 1px solid #ddd;
                border-radius: 5px;
                background-color: white;
                width: 50%;
                text-align: left;
                display: none;
            }
        </style>
        <script src="config.js"></script>
    </head>
    
    <body>
        <h1>Data Fetcher</h1>
        <div class="button-container">
            <button onclick="fetchData('all')">All</button>
            <button onclick="fetchData('http-method')">HTTP Method</button>
            <button onclick="fetchData('client-ip')">Client IP</button>
            <button onclick="fetchData('user-agent')">User-Agent</button>
            <button onclick="fetchData('uuid')">UUID</button>
        </div>
        <div class="result-container" id="result-container">
            <h3>Result:</h3>
            <pre id="result"></pre>
        </div>
    
        <script>
            # const url = window.env.API_URL || `http://127.0.0.1:5000/api`;

            console.log(window.env)
               
            async function fetchData(type) {
                fetch(`${url}/${type}`)
                    .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok ' + response.statusText);
                            }
                            return response.json()
            })
                    .then(data => {
                        console.log('Response from backend:', data)
                        const resultContainer = document.getElementById('result-container');
                        const result = document.getElementById('result');
                        result.textContent = JSON.stringify(data, null, 2);
                        resultContainer.style.display = 'block';
                    })
                    .catch(error => console.error('Error fetching data:', error));
            }
        </script>
    </body>
    
    </html>

#   "entrypoint.sh": |-
#     #!/bin/bash
#     mkdir -p /tmp/config
    
#     # Write the environment variables to config.js
#     echo "window.env = {" > /var/www/html/config.js
#     echo "  API_URL: 'http://${API_URL}'," >> /var/www/html/config.js
#     echo "};" >> /var/www/html/config.js
    
#     # Copy the index.html to the writable directory
#     # cp /var/www/html/index.html /tmp/config/index.html

#     # cp /tmp/files/* /var/www/html


#     # cp /tmp/config/config.js /var/www/html/config.js
    
#     # Start the HTTP server to serve from /tmp/config
#     # exec httpd -DFOREGROUND -d /tmp/config
#     run-httpd




